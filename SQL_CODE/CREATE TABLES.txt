CREATE TABLE Professor(
prof_full_name VARCHAR(50) NOT NULL,
prof_email VARCHAR(40) NOT NULL,
prof_mobile VARCHAR(10) NOT NULL,
prof_phone VARCHAR(15) NOT NULL,
prof_field_of_study VARCHAR(255) NOT NULL,
prof_property ENUM('ΔΕΠ', 'ΕΔΙΠ', 'ΕΤΕΠ', 'ΕΕΠ', 'Α', 'Β', 'Γ') DEFAULT NULL,
PRIMARY KEY (prof_email));

CREATE TABLE Student(
std_full_name VARCHAR(50) NOT NULL,
std_AM VARCHAR(10) NOT NULL,
std_email VARCHAR(40) NOT NULL,
std_mobile VARCHAR(10) NOT NULL,
std_phone VARCHAR(15) NOT NULL,
std_full_address TEXT NOT NULL,
std_ECTS INT DEFAULT NULL,
std_year_of_study INT DEFAULT 1,
PRIMARY KEY (std_email));

CREATE TABLE Secretariat(
sec_full_name VARCHAR(50) NOT NULL,
sec_email VARCHAR(40) NOT NULL,
sec_mobile VARCHAR(10) NOT NULL,
sec_phone VARCHAR(15) NOT NULL,
PRIMARY KEY (sec_email));

CREATE TABLE Users (
usr_username VARCHAR(40) UNIQUE NOT NULL,
usr_password VARCHAR(255) NOT NULL,
usr_property ENUM('PROFESSOR','STUDENT','SECRETARIAT'),
PRIMARY KEY (usr_username));

CREATE TABLE Thesis(
th_id INT AUTO_INCREMENT,
th_title VARCHAR(255) NOT NULL,
th_description TEXT NOT NULL,
th_pdf_attachment VARCHAR(255),
th_status ENUM('Under Assignment','Active','Under Review','Completed') NOT NULL DEFAULT 'Under Assignment',
th_student_email VARCHAR(40) UNIQUE DEFAULT NULL,
th_supervisor VARCHAR(40) NOT NULL,
th_committee_member1 VARCHAR(40),
th_committee_member2 VARCHAR(40),
th_assigned_date DATE DEFAULT NULL,
th_completion_date DATE,
PRIMARY KEY (th_id,th_supervisor),
FOREIGN KEY (th_supervisor) REFERENCES Professor (prof_email),
FOREIGN KEY (th_committee_member1) REFERENCES Professor (prof_email),
FOREIGN KEY (th_committee_member2) REFERENCES Professor (prof_email));

CREATE TABLE Requests(
req_id INT AUTO_INCREMENT,
req_thesis_id INT NOT NULL,
req_student_email VARCHAR(40) NOT NULL,
req_professor VARCHAR(40) NOT NULL,
req_status ENUM('Accepted','Declined','Pending') NOT NULL DEFAULT 'Pending',
req_query_date DATE,
PRIMARY KEY (req_id,req_thesis_id,req_student_email,req_professor),
FOREIGN KEY (req_thesis_id) REFERENCES Thesis (th_id),
FOREIGN KEY (req_student_email) REFERENCES Student (std_email),
FOREIGN KEY (req_professor) REFERENCES Professor (prof_email));

CREATE TABLE Responses(
res_id INT AUTO_INCREMENT,
res_req_id INT NOT NULL,
res_response ENUM('Accepted','Declined','Pending') NOT NULL DEFAULT 'Pending',
res_answer DATE,
PRIMARY KEY (res_id,res_req_id),
FOREIGN KEY (res_req_id) REFERENCES Requests (req_id)
ON DELETE CASCADE ON UPDATE CASCADE);

CREATE TABLE Notes(
note_id INT AUTO_INCREMENT,
note_thesis_id INT NOT NULL,
note_creator VARCHAR(40) NOT NULL,
note_content TEXT(300) NOT NULL,
note_timestap TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (note_id),
FOREIGN KEY (note_thesis_id) REFERENCES Thesis (th_id),
FOREIGN KEY (note_creator) REFERENCES Professor (prof_email));

CREATE TABLE Submissions(
sub_id INT AUTO_INCREMENT,
sub_thesis_id INT NOT NULL,
sub_student_email VARCHAR(40) NOT NULL,
sub_paper_file_path VARCHAR(255) NOT NULL,
sub_extra_material_path VARCHAR(255),
sub_upload_date DATE NOT NULL DEFAULT CURRENT_DATE,
PRIMARY KEY (sub_id,sub_thesis_id,sub_student_email),
FOREIGN KEY (sub_thesis_id) REFERENCES Thesis (th_id),
FOREIGN KEY (sub_student_email) REFERENCES Student (std_email));

CREATE TABLE Announcements (
ann_id INT AUTO_INCREMENT,
ann_title VARCHAR(255) NOT NULL,
ann_content TEXT NOT NULL,
ann_date DATE NOT NULL DEFAULT CURRENT_DATE,
ann_format ENUM('XML', 'JSON') NOT NULL,
PRIMARY KEY (ann_id));

CREATE TABLE Grades (
grd_id INT AUTO_INCREMENT,
grd_thesis_id INT NOT NULL,
grd_professor VARCHAR(40) NOT NULL,
grd_criteria JSON NOT NULL,
grd_final_grade FLOAT NOT NULL,
grd_graded_date DATE NOT NULL DEFAULT CURRENT_DATE,
PRIMARY KEY (grd_id),
FOREIGN KEY (grd_thesis_id) REFERENCES Thesis(th_id),
FOREIGN KEY (grd_professor) REFERENCES Professor (prof_email));
    
   
